% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wc_to_ascii.R
\name{wc_to_ascii}
\alias{wc_to_ascii}
\title{Convert WorldClim GeoTIFF files to Esri ASCII Grid}
\usage{
wc_to_ascii(
  file,
  dir = dirname(file[1]),
  shape = NULL,
  box = NULL,
  dateline_fix = TRUE,
  extreme_outlier_fix = TRUE,
  aggregate = NULL,
  overwrite = TRUE,
  dx = -45,
  na_flag = -99,
  ...
)
}
\arguments{
\item{file}{A \code{\link[base:character]{character}} vector of file paths to the
WorldClim GeoTIFF files to be converted. The files must have a \code{.tif}
extension.}

\item{dir}{A \code{\link[base:character]{character}} vector specifying the output
directory for the converted ASCII files (default: \code{dirname(file[1])}).}

\item{shape}{(optional) A \code{\link[terra:SpatVector-class]{SpatVector}} object
representing the polygon to crop the raster data. The function will crop
the raster data to the extent of this polygon (default: \code{NULL}).}

\item{box}{(optional) A \code{\link[base:numeric]{numeric}} vector of length 4
specifying the bounding box for cropping the raster data in the format
\code{c(xmin, ymin, xmax, ymax)} (default: \code{NULL}).}

\item{dateline_fix}{(optional) A \code{\link[base:logical]{logical}} flag indicating
whether to apply a dateline fix to the raster data. This is particularly
useful when working with rasters and vectors that span the dateline (e.g.
the Russian territory). See \code{\link{shift_and_crop}} to learn more
(default: \code{TRUE}).}

\item{extreme_outlier_fix}{(optional) A \code{\link[base:logical]{logical}} flag
indicating whether to replace extreme outliers with \code{NA}. Extreme outliers
are defined as values more than 10 times the interquartile range
(\href{https://en.wikipedia.org/wiki/Interquartile_range}{IQR})
below the first or above the third quartile. The quartiles and IQR are
calculated using the unique (deduplicated) values of the data, and the
resulting thresholds are applied to the full dataset. This helps remove
abnormal values in raster data.}

\item{aggregate}{(optional) An \code{\link[base:integer]{integer}} value specifying
the aggregation factor. The function will aggregate the raster data by this
factor. See \code{\link[terra:aggregate]{aggregate()}} for more details
(default: \code{NULL}).}

\item{overwrite}{(optional) A \code{\link[base:logical]{logical}} flag indicating
whether to overwrite existing files in the output directory
(default: \code{TRUE}).}

\item{dx}{(optional) A \code{\link[base:numeric]{numeric}} value specifying the
horizontal distance in degrees to shift the raster data. This is only
relevant if \code{dateline_fix} is set to \code{TRUE} (default: \code{-45}).}

\item{na_flag}{(optional) An \code{\link[base:integer]{integer}} value specifying
the NoData value for the output ASCII files. See the \emph{Details} section
to learn more (default: \code{-99}).}

\item{...}{Additional arguments passed to
\code{\link[terra:writeRaster]{writeRaster()}} for writing the ASCII files.}
}
\value{
A \code{\link[base:character]{character}} vector containing the file paths
of the converted ASCII files.
}
\description{
\code{wc_to_ascii()} facilitates the conversion of one or more
\href{https://worldclim.org/}{WorldClim}
\href{https://en.wikipedia.org/wiki/GeoTIFF}{GeoTIFF} files to the \href{https://en.wikipedia.org/wiki/Esri_grid}{Esri ASCII Grid} raster format. Optionally,
rasters can be cropped and/or aggregated using a provided polygon of class
\code{\link[terra:SpatVector-class]{SpatVector}}.
}
\details{
\subsection{\code{na_flag} parameter}{

According to the Esri ASCII raster format documentation, the default value
for \code{NODATA_VALUE} (the \code{NA} flag) is \code{-9999}. However, using four digits of
precision significantly inflates file size. For WorldClim data, two
significant digits (\code{-99}) are sufficient, since the only variables with
negative values are temperatures, and the lowest temperature ever recorded on
Earth is above that.
}
}
\examples{
\dontrun{
  library(curl)
  library(fs)
  library(magrittr)
  library(readr)
  library(rvest)
  library(stringr)
  library(zip)

  # Download the WorldClim Data

  url <-
    get_wc_url("hcd") |>
    rvest::read_html() |>
    rvest::html_elements("a") |>
    rvest::html_attr("href") |>
    stringr::str_subset("geodata") |>
    magrittr::extract(1)

  zip_file <- basename(url)

  curl::curl_download(url, path(tempdir(), zip_file))

  path(tempdir(), zip_file) |>
    zip::unzip(exdir = tempdir())

  tif_file <-
    dir_ls(tempdir(), regexp = "\\\\.tif$") |>
    magrittr::extract(1)

  # Run the Function

  asc_file <- tif_file |> wc_to_ascii()

  # Check the Output

  asc_file |> read_lines(n_max = 6)
}
}
\seealso{
Other WorldClim functions: 
\code{\link{get_wc_url}()},
\code{\link{worldclim_random}()}
}
\concept{WorldClim functions}
