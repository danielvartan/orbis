[{"path":[]},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement danvartan@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://danielvartan.github.io/orbis/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to orbis","title":"Contributing to orbis","text":"First , thanks considering contributing orbis! 👍 ’s people like make rewarding us - project maintainers - work orbis. 😊 orbis open source project, maintained people care. directly funded .","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to orbis","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How You Can Contribute","title":"Contributing to orbis","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"share-the-love-️","dir":"","previous_headings":"How You Can Contribute","what":"Share the Love ❤️","title":"Contributing to orbis","text":"Think orbis useful? Let others discover , telling person, via Twitter blog post. Using orbis paper writing? Consider citing .","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How You Can Contribute","what":"Propose an Idea 💡","title":"Contributing to orbis","text":"idea new orbis feature? Take look documentation [issue list][issue] see isn’t included suggested yet. , suggest idea [issue GitHub][issue]. can’t promise implement idea, helps : Explain detail work Keep scope narrow possible See want contribute code idea well.","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How You Can Contribute","what":"Report a Bug 🐛","title":"Contributing to orbis","text":"Using orbis discovered bug? ’s annoying! Don’t let others experience report issue GitHub can fix . good bug report makes easier us , please include: content utils::sessionInfo(). details local setup might helpful troubleshooting. Detailed steps reproduce bug (Tip: use reprex package).","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How You Can Contribute","what":"Improve the Documentation 📖","title":"Contributing to orbis","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"The Website","title":"Contributing to orbis","text":"website generated pkgdown. means don’t write html: Content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation.","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"Function Documentation","title":"Contributing to orbis","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository Look file function Propose file change update function documentation roxygen comments (starting #')","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How You Can Contribute","what":"Contribute Code 📝","title":"Contributing to orbis","text":"Care fix bugs implement new functionality orbis? Awesome! 👏 look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://danielvartan.github.io/orbis/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development Guidelines","title":"Contributing to orbis","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main Open project RStudio IDE choice Write code Test code (Bonus points adding unit tests) Document code (See function documentation ) Check code devtools::check() aim 0 errors, warnings notes Commit push changes Submit pull request Also note use tidyverse design guide tidyverse style guide. code must conform principles rules.","code":""},{"path":"https://danielvartan.github.io/orbis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daniel Vartanian Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danielvartan.github.io/orbis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vartanian. Author, maintainer, conceptor, copyright holder.","code":""},{"path":"https://danielvartan.github.io/orbis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vartanian, D.. (2025). {orbis}: Spatial data analysis tools[Computer Software, R package]. https://danielvartan.github.io/orbis/","code":"@Misc{,   title = {{orbis}: Spatial data analysis tools},   author = {Daniel Vartanian},   year = {2025},   url = {https://danielvartan.github.io/orbis/},   note = {R package}, }"},{"path":[]},{"path":"https://danielvartan.github.io/orbis/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Spatial Data Analysis Tools","text":"orbis R package offers comprehensive suite tools simplifying spatial data analysis.","code":""},{"path":"https://danielvartan.github.io/orbis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial Data Analysis Tools","text":"can install orbis using remotes package:","code":"remotes::install_github(\"danielvartan/orbis\")"},{"path":"https://danielvartan.github.io/orbis/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Spatial Data Analysis Tools","text":"orbis equipped several functions help analysis, : filter_points_on_land: filters latitude/longitude points intersects given sf geometry. get_country_names: Get names codes countries present ISO 3166-1 standard. get_brazil_region: Get Brazilian regions. get_brazil_fu: Get Brazilian federative unit abbreviations. get_brazil_state: Get Brazilian state names. get_brazil_municipality: Get Brazilian municipalities data. get_sidra_by_year: Get aggregate data year SIDRA API (avoid overloading API). wc_to_ascii: Convert WorldClim GeoTIFF files ASCII format Click see full list.","code":""},{"path":"https://danielvartan.github.io/orbis/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Spatial Data Analysis Tools","text":"orbis code released MIT license.","code":""},{"path":"https://danielvartan.github.io/orbis/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Spatial Data Analysis Tools","text":"Contributions welcome, including bug reports. Take moment review Guidelines Contributing.  Become orbis supporter! Click make donation. Please indicate orbis package donation message.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/filter_points_on_land.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter points on land — filter_points_on_land","title":"Filter points on land — filter_points_on_land","text":"filter_points_on_land() filters latitude/longitude points intersects given geometry.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/filter_points_on_land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter points on land — filter_points_on_land","text":"","code":"filter_points_on_land(data, geometry)"},{"path":"https://danielvartan.github.io/orbis/reference/filter_points_on_land.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter points on land — filter_points_on_land","text":"data tibble data points filtered. must columns longitude latitude. geometry sf object geometry used filtering.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/filter_points_on_land.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter points on land — filter_points_on_land","text":"tibble.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/filter_points_on_land.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter points on land — filter_points_on_land","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(geobr) #> Loading required namespace: sf library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE  data <- tibble(   latitude = get_brazil_state_latitude(),   longitude = get_brazil_state_longitude() )  data #> # A tibble: 27 × 2 #>    latitude longitude #>       <dbl>     <dbl> #>  1  -9.98       -67.8 #>  2  -9.65       -35.7 #>  3   0.0402     -51.1 #>  4  -3.13       -60.0 #>  5 -13.0        -38.5 #>  6  -3.73       -38.5 #>  7 -15.8        -47.9 #>  8 -20.3        -40.3 #>  9 -16.7        -49.3 #> 10  -2.53       -44.3 #> # ℹ 17 more rows  geometry <- read_state(code = \"SP\") |> pull(geom) #> Using year/date 2010  geometry |> st_bbox() #>      xmin      ymin      xmax      ymax  #> -53.11011 -25.31232 -44.16137 -19.77989   filter_points_on_land(data, geometry) #> # A tibble: 1 × 2 #>   latitude longitude #>      <dbl>     <dbl> #> 1    -23.6     -46.6"},{"path":"https://danielvartan.github.io/orbis/reference/fix_postal_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix postal code numbers — fix_postal_code","title":"Fix postal code numbers — fix_postal_code","text":"fix_postal_code() provides tools fix postal code numbers.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/fix_postal_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix postal code numbers — fix_postal_code","text":"","code":"fix_postal_code(   postal_code,   min_char = 3,   max_char = 8,   squish = TRUE,   remove_non_numeric = TRUE,   remove_number_sequences = TRUE,   trunc = TRUE,   pad = TRUE,   zero_na = FALSE )"},{"path":"https://danielvartan.github.io/orbis/reference/fix_postal_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix postal code numbers — fix_postal_code","text":"postal_code character vector postal code numbers. min_char (optional) integerish number minimum number characters (default: 3). max_char (optional) integerish number maximum number characters (default: 8). squish (optional) logical flag indicating whether squish (.e., remove leading, trailing, extra spaces) postal code numbers (default: TRUE). remove_non_numeric (optional) logical flag indicating whether remove non-numeric characters postal code numbers (default: TRUE). remove_number_sequences (optional) logical flag indicating whether remove number sequences postal code numbers. useful remove postal code numbers like 11111111 (default: TRUE). trunc (optional) logical flag indicating whether truncate postal code numbers max_char width (default: TRUE). pad (optional) logical flag indicating whether pad postal code numbers zeros max_char width (default: TRUE). zero_na (optional) logical flag indicating whether replace NA values zeros (default: FALSE).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/fix_postal_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix postal code numbers — fix_postal_code","text":"character vector fixed postal code numbers.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/fix_postal_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix postal code numbers — fix_postal_code","text":"","code":"fix_postal_code(\"  01014908  \", squish = TRUE) #> [1] \"01014908\" #> [1] \"01014908\" # Expected  fix_postal_code(\"01014908\", min_char = 10) #> [1] NA #> [1] NA # Expected  fix_postal_code(\"01014908\", max_char = 5, trunc = FALSE) #> [1] NA #> [1] NA # Expected  fix_postal_code(\"A1C14D08\", remove_non_numeric = TRUE, pad = TRUE) #> [1] \"11408000\" #> [1] \"11408000\" # Expected  fix_postal_code(\"123456789\", remove_number_sequences = TRUE) #> [1] NA #> [1] NA # Expected  fix_postal_code(\"01014908\", max_char = 5, trunc = TRUE) #> [1] \"01014\" #> [1] \"01014\" # Expected  fix_postal_code(\"01253\", max_char = 8, pad = TRUE) #> [1] \"01253000\" #> [1] \"01253000\" # Expected  fix_postal_code(NA, max_char = 8, zero_na = TRUE) #> [1] \"00000000\" #> [1] \"00000000\" # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"get_brazil_address_by_postal_code() retrieves Brazilian address based postal code using reverse geocoding. Please note accuracy results may vary depending method used.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"","code":"get_brazil_address_by_postal_code(   postal_code,   method = \"qualocep\",   fix_code = TRUE,   limit = 10 )"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"postal_code character vector postal code(s) used . postal code must format XXXXXXXX, X digit. method (optional) character value indicating method used retrieve address data. available options \"osm\", \"google\",\"qualocep\", \"viacep\" (default: qualocep). fix_code (optional) logical flag indicating postal code must fixed used (default: TRUE). limit (optional) numeric value indicating maximum number results return. value Inf, postal codes used (default: 10).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"tibble following columns: postal_code: character vector postal codes. street: character vector full names streets. complement: character vector complements addresses. neighborhood: character vector neighborhoods. municipality_code: integer vector codes Brazilian Institute Geography Statistics (IBGE) Brazilian municipalities. municipality: character vector names municipalities. state_code: integer vector codes Brazilian Institute Geography Statistics (IBGE) Brazilian states. state: character vector names states. region: character vector Brazilian regions. address: character vector full addresses. latitude: numeric vector latitude values postal codes. longitude: numeric vector longitude values postal codes.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"source data depend method used. Run ?tidygeocoder::geo learn . exception \"qualocep\" \"viacep\" method. methods return address data Qual o CEP database ViaCEP API, respectively. See ?tidygeocoder::geo learn use method = \"google.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_address_by_postal_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Brazilian address by its postal code via reverse geocoding — get_brazil_address_by_postal_code","text":"","code":"if (FALSE) { # \\dontrun{   library(dplyr)    \"01014908\" |>     get_brazil_address_by_postal_code(method = \"osm\") |>     glimpse()    \"01014908\" |>     get_brazil_address_by_postal_code(method = \"google\") |>     glimpse()    \"01014908\" |>     get_brazil_address_by_postal_code(method = \"qualocep\") |>     glimpse()    \"01014908\" |>     get_brazil_address_by_postal_code(method = \"viacep\") |>     glimpse()    c(\"01014-908\", NA, \"05650-905\") |>     get_brazil_address_by_postal_code(method = \"qualocep\") |>     glimpse() } # }"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian federative unit abbreviations — get_brazil_fu","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"get_brazil_fu() returns vector abbreviations Brazilian federal units.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"","code":"get_brazil_fu(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"x (optional) atomic vector containing names numeric codes Brazilian regions federal units. Municipality codes also supported. NULL, returns character vector Brazilian federal unit abbreviations (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"character vector abbreviations Brazilian federal units.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_fu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian federative unit abbreviations — get_brazil_fu","text":"","code":"get_brazil_fu() #>  [1] \"AC\" \"AL\" \"AP\" \"AM\" \"BA\" \"CE\" \"DF\" \"ES\" \"GO\" \"MA\" \"MT\" \"MS\" \"MG\" \"PA\" \"PB\" #> [16] \"PR\" \"PE\" \"PI\" \"RJ\" \"RN\" \"RS\" \"RO\" \"RR\" \"SC\" \"SP\" \"SE\" \"TO\"  get_brazil_fu(\"sp\") #> [1] \"SP\" #> [1] \"SP\" # Expected  get_brazil_fu(\"sao paulo\") #> [1] \"SP\" #> [1] \"SP\" # Expected  get_brazil_fu(35) #> [1] \"SP\" #> [1] \"SP\" # Expected  get_brazil_fu(3550308) # Municipality of São Paulo #> [1] \"SP\" #> [1] \"SP\" # Expected  get_brazil_fu(35503081) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_fu(39027001) # Non-existent state code #> [1] NA #> [1] NA # Expected  get_brazil_fu(\"southeast\") #> [1] \"ES\" \"MG\" \"RJ\" \"SP\" #> [1] \"ES\" \"MG\" \"RJ\" \"SP\" # Expected  get_brazil_fu(3) #> [1] \"ES\" \"MG\" \"RJ\" \"SP\" #> [1] \"ES\" \"MG\" \"RJ\" \"SP\" # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian municipalities data — get_brazil_municipality","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"get_brazil_municipality() returns tibble data Brazilian municipalities.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"","code":"get_brazil_municipality(   municipality = NULL,   state = NULL,   year = 2017,   force = FALSE )"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"municipality (optional) character vector name municipalities. NULL function returns municipalities (default: NULL). state (optional) character vector name states (default: NULL). year (optional) integerish number indicating year data regarding municipalities (default: 2017). force (optional) logical flag indicating whether force download data (default: FALSE).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"tibble following columns: region_code: region code. region: region name. state_code: state code. state: state name. federal_unit: state abbreviation. municipality_code: municipality code. municipality: municipality name.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"data function based data Brazilian Institute Geography Statistics (IBGE) via geobr R package. geobr package produced Brazil's Institute Applied Economic Research (IPEA) access Brazilian Institute Geography Statistics (IBGE) data. can see list geobr datasets running geobr::list_geobr().","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian municipalities data — get_brazil_municipality","text":"","code":"get_brazil_municipality() |> dplyr::glimpse() #> Rows: 5,570 #> Columns: 7 #> $ region_code       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ region            <chr> \"North\", \"North\", \"North\", \"North\", \"North\", \"North\"… #> $ state_code        <int> 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, … #> $ state             <chr> \"Rondônia\", \"Rondônia\", \"Rondônia\", \"Rondônia\", \"Ron… #> $ federal_unit      <chr> \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\", \"RO\"… #> $ municipality_code <int> 1100015, 1100023, 1100031, 1100049, 1100056, 1100064… #> $ municipality      <chr> \"Alta Floresta D'Oeste\", \"Ariquemes\", \"Cabixi\", \"Cac…  get_brazil_municipality(municipality = \"Belém\") #> # A tibble: 3 × 7 #>   region_code region    state_code state   federal_unit municipality_code #>         <int> <chr>          <int> <chr>   <chr>                    <int> #> 1           1 North             15 Pará    PA                     1501402 #> 2           2 Northeast         25 Paraíba PB                     2501906 #> 3           2 Northeast         27 Alagoas AL                     2700805 #> # ℹ 1 more variable: municipality <chr>  get_brazil_municipality(municipality = \"Belém\", state = \"Pará\") #> # A tibble: 1 × 7 #>   region_code region state_code state federal_unit municipality_code #>         <int> <chr>       <int> <chr> <chr>                    <int> #> 1           1 North          15 Pará  PA                     1501402 #> # ℹ 1 more variable: municipality <chr>  get_brazil_municipality(municipality = c(\"Belém\", \"São Paulo\")) #> # A tibble: 4 × 7 #>   region_code region    state_code state     federal_unit municipality_code #>         <int> <chr>          <int> <chr>     <chr>                    <int> #> 1           1 North             15 Pará      PA                     1501402 #> 2           2 Northeast         25 Paraíba   PB                     2501906 #> 3           2 Northeast         27 Alagoas   AL                     2700805 #> 4           3 Southeast         35 São Paulo SP                     3550308 #> # ℹ 1 more variable: municipality <chr>"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian municipalities codes — get_brazil_municipality_code","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"get_brazil_municipality() returns vector codes Brazilian Institute Geography Statistics (IBGE) Brazilian municipalities.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"","code":"get_brazil_municipality_code(   municipality,   state = NULL,   year = 2017,   names = TRUE )"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"municipality (optional) character vector name municipalities. NULL function returns municipalities (default: NULL). state (optional) character vector name states (default: NULL). year (optional) integerish number indicating year data regarding municipalities (default: 2017). names (optional) logical flag indicating whether return names municipalities names vector (default: TRUE).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"integer vector IBGE codes Brazilian municipalities.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"data function based data Brazilian Institute Geography Statistics (IBGE) via geobr R package. geobr package produced Brazil's Institute Applied Economic Research (IPEA) access Brazilian Institute Geography Statistics (IBGE) data. can see list geobr datasets running geobr::list_geobr().","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_municipality_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian municipalities codes — get_brazil_municipality_code","text":"","code":"get_brazil_municipality_code(municipality = \"Belém\") #> Belém-PA Belém-PB Belém-AL  #>  1501402  2501906  2700805   get_brazil_municipality_code(municipality = \"Belém\", names = FALSE) #> [1] 1501402 2501906 2700805  get_brazil_municipality_code(municipality = \"Belém\", state = \"Pará\") #> Belém-PA  #>  1501402   get_brazil_municipality_code(municipality = c(\"Rio de Janeiro\", \"São Paulo\")) #> Rio de Janeiro-RJ      São Paulo-SP  #>           3304557           3550308"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian regions — get_brazil_region","title":"Get Brazilian regions — get_brazil_region","text":"get_brazil_region() returns vector names Brazilian regions.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian regions — get_brazil_region","text":"","code":"get_brazil_region(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian regions — get_brazil_region","text":"x (optional) atomic vector containing names, abbreviations, numeric codes Brazilian states federal units. Region municipality codes also supported. NULL, returns vector Brazilian regions. (default: NULL)","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian regions — get_brazil_region","text":"character vector names Brazilian regions.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian regions — get_brazil_region","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian regions — get_brazil_region","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian regions — get_brazil_region","text":"","code":"get_brazil_region() #> [1] \"North\"        \"Northeast\"    \"South\"        \"Southeast\"    \"Central-West\" #> [1] \"North\" \"Northeast\" \"South\" \"Southeast\" \"Central-West\" # Expected  get_brazil_region(\"sp\") #> [1] \"Southeast\" #> [1] \"Southeast\" # Expected  get_brazil_region(\"sao paulo\") #> [1] \"Southeast\" #> [1] \"Southeast\" # Expected  get_brazil_region(c(1, 4)) #> [1] \"North\" \"South\" #> [1] \"North\" \"South\" # Expected  get_brazil_region(35) # State of São Paulo #> [1] \"Southeast\" #> [1] \"Southeast\" # Expected  get_brazil_region(3550308) # Municipality of São Paulo #> [1] \"Southeast\" #> [1] \"Southeast\" # Expected  get_brazil_region(35503081) # >7 digits #> [1] NA #> [1] NA # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian region codes — get_brazil_region_code","title":"Get Brazilian region codes — get_brazil_region_code","text":"get_brazil_region_code() returns vector Brazilian Institute Geography Statistics (IBGE) codes Brazilian regions.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian region codes — get_brazil_region_code","text":"","code":"get_brazil_region_code(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian region codes — get_brazil_region_code","text":"x (optional) character vector containing names Brazilian regions, states, federal units. NULL, returns named vector Brazilian region codes (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian region codes — get_brazil_region_code","text":"integer vector IBGE codes Brazilian regions.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian region codes — get_brazil_region_code","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian region codes — get_brazil_region_code","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_region_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian region codes — get_brazil_region_code","text":"","code":"get_brazil_region_code() #>        North    Northeast    Southeast        South Central-West  #>            1            2            3            4            5   get_brazil_region_code(\"north\") #> [1] 1 #> [1] 1 # Expected  get_brazil_region_code(c(\"north\", \"central-west\")) #> [1] 1 5 #> [1] 1 5 # Expected  get_brazil_region_code(\"sao paulo\") #> [1] 3 #> [1] 3 # Expected  get_brazil_region_code(\"sp\") #> [1] 3 #> [1] 3 # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state names — get_brazil_state","title":"Get Brazilian state names — get_brazil_state","text":"get_brazil_state() returns vector names Brazilian states.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state names — get_brazil_state","text":"","code":"get_brazil_state(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state names — get_brazil_state","text":"x (optional) atomic vector containing names numeric codes Brazilian regions federal units. Municipality codes also supported. NULL, returns character vector Brazilian state names (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state names — get_brazil_state","text":"character vector names Brazilian states.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state names — get_brazil_state","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian state names — get_brazil_state","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state names — get_brazil_state","text":"","code":"get_brazil_state() #>  [1] \"Acre\"                \"Alagoas\"             \"Amapá\"               #>  [4] \"Amazonas\"            \"Bahia\"               \"Ceará\"               #>  [7] \"Distrito Federal\"    \"Espírito Santo\"      \"Goiás\"               #> [10] \"Maranhão\"            \"Mato Grosso\"         \"Mato Grosso do Sul\"  #> [13] \"Minas Gerais\"        \"Pará\"                \"Paraíba\"             #> [16] \"Paraná\"              \"Pernambuco\"          \"Piauí\"               #> [19] \"Rio de Janeiro\"      \"Rio Grande do Norte\" \"Rio Grande do Sul\"   #> [22] \"Rondônia\"            \"Roraima\"             \"Santa Catarina\"      #> [25] \"São Paulo\"           \"Sergipe\"             \"Tocantins\"            get_brazil_state(\"rj\") #> [1] \"Rio de Janeiro\" #> [1] \"Rio de Janeiro\" # Expected  get_brazil_state(\"rio de janeiro\") #> [1] \"Rio de Janeiro\" #> [1] \"Rio de Janeiro\" # Expected  get_brazil_state(33) #> [1] \"Rio de Janeiro\" #> [1] \"Rio de Janeiro\" # Expected  get_brazil_state(3302700) # Maricá #> [1] \"Rio de Janeiro\" #> [1] \"Rio de Janeiro\" # Expected  get_brazil_state(33027001) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_state(39027001) # Non-existent state code #> [1] NA #> [1] NA # Expected  get_brazil_state(\"southeast\") #> [1] \"Espírito Santo\" \"Minas Gerais\"   \"Rio de Janeiro\" \"São Paulo\"      #> [1] \"Espírito Santo\" \"Minas Gerais\"   \"Rio de Janeiro\" # Expected #> [4] \"São Paulo\"  get_brazil_state(3) #> [1] \"Espírito Santo\" \"Minas Gerais\"   \"Rio de Janeiro\" \"São Paulo\"      #> [1] \"Espírito Santo\" \"Minas Gerais\"   \"Rio de Janeiro\" # Expected #> [4] \"São Paulo\""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state names by UTC — get_brazil_state_by_utc","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"get_brazil_state_by_utc() returns vector names Brazilian states abbreviations Brazilian federal units UTC offset.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"","code":"get_brazil_state_by_utc(utc = -3, type = \"fu\")"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"utc (optional) integerish number UTC offset. Available choices -5, -4, -3, -2 (default: -3). type (optional) character string specifying type value return. Available choices \"state\" \"fu\" (default: \"fu\").","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"character vector names Brazilian states abbreviations Brazilian federal units.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"data function based 2024b dataset (Released 2024-09-04) Internet Assigned Numbers Authority (IANA, 2024)","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"Internet Assigned Numbers Authority. (2024). Time zone database (. 2024b) [Dataset]. https://www.iana.org/time-zones","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_by_utc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state names by UTC — get_brazil_state_by_utc","text":"","code":"get_brazil_state_by_utc(-3, type = \"fu\") #>  [1] \"AL\" \"AP\" \"BA\" \"CE\" \"DF\" \"ES\" \"GO\" \"MA\" \"MG\" \"PA\" \"PB\" \"PR\" \"PE\" \"PI\" \"RJ\" #> [16] \"RN\" \"RS\" \"SC\" \"SP\" \"SE\" \"TO\"  get_brazil_state_by_utc(-3, type = \"state\") #>  [1] \"Alagoas\"             \"Amapá\"               \"Bahia\"               #>  [4] \"Ceará\"               \"Distrito Federal\"    \"Espírito Santo\"      #>  [7] \"Goiás\"               \"Maranhão\"            \"Minas Gerais\"        #> [10] \"Pará\"                \"Paraíba\"             \"Paraná\"              #> [13] \"Pernambuco\"          \"Piauí\"               \"Rio de Janeiro\"      #> [16] \"Rio Grande do Norte\" \"Rio Grande do Sul\"   \"Santa Catarina\"      #> [19] \"São Paulo\"           \"Sergipe\"             \"Tocantins\""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state capital names — get_brazil_state_capital","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"get_brazil_state_capital() returns vector capital names Brazilian states federal units.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"","code":"get_brazil_state_capital(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"x (optional) atomic vector containing names Brazilian states federal units. Municipality state codes also supported. NULL, returns vector state capital names (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"character vector names Brazilian state capitals.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_capital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state capital names — get_brazil_state_capital","text":"","code":"get_brazil_state_capital() #>                Acre             Alagoas               Amapá            Amazonas  #>        \"Rio Branco\"            \"Maceió\"            \"Macapá\"            \"Manaus\"  #>               Bahia               Ceará    Distrito Federal      Espírito Santo  #>          \"Salvador\"         \"Fortaleza\"          \"Brasília\"           \"Vitória\"  #>               Goiás            Maranhão         Mato Grosso  Mato Grosso do Sul  #>           \"Goiânia\"          \"São Luís\"            \"Cuiabá\"      \"Campo Grande\"  #>        Minas Gerais                Pará             Paraíba              Paraná  #>    \"Belo Horizonte\"             \"Belém\"       \"João Pessoa\"          \"Curitiba\"  #>          Pernambuco               Piauí      Rio de Janeiro Rio Grande do Norte  #>            \"Recife\"          \"Teresina\"    \"Rio de Janeiro\"             \"Natal\"  #>   Rio Grande do Sul            Rondônia             Roraima      Santa Catarina  #>      \"Porto Alegre\"       \"Porto Velho\"         \"Boa Vista\"     \"Florianópolis\"  #>           São Paulo             Sergipe           Tocantins  #>         \"São Paulo\"           \"Aracaju\"            \"Palmas\"   get_brazil_state_capital(\"pi\") #> [1] \"Teresina\" #> [1] \"Teresina\" # Expected  get_brazil_state_capital(\"piaui\") #> [1] \"Teresina\" #> [1] \"Teresina\" # Expected  get_brazil_state_capital(22) #> [1] \"Teresina\" #> [1] \"Teresina\" # Expected  get_brazil_state_capital(2211001) # Teresina #> [1] \"Teresina\" #> [1] \"Teresina\" # Expected  get_brazil_state_capital(22110011) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_state_capital(3912345) # Non-existent state code #> [1] NA #> [1] NA # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state codes — get_brazil_state_code","title":"Get Brazilian state codes — get_brazil_state_code","text":"get_brazil_state_code() returns vector Brazilian Institute Geography Statistics (IBGE) codes Brazilian states.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state codes — get_brazil_state_code","text":"","code":"get_brazil_state_code(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state codes — get_brazil_state_code","text":"x (optional) atomic vector containing names Brazilian states federal units. Municipality codes also supported. NULL, returns vector state codes (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state codes — get_brazil_state_code","text":"integer vector IBGE codes Brazilian states.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state codes — get_brazil_state_code","text":"data function based data Brazilian Institute Geography Statistics (IBGE, n.d.).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Brazilian state codes — get_brazil_state_code","text":"Instituto Brasileiro de Geografia e Estatística. (n.d.). Território [Territory] [Dataset]. SIDRA. https://sidra.ibge.gov.br/territorio","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state codes — get_brazil_state_code","text":"","code":"get_brazil_state_code() #>                Acre             Alagoas               Amapá            Amazonas  #>                  12                  27                  16                  13  #>               Bahia               Ceará    Distrito Federal      Espírito Santo  #>                  29                  23                  53                  32  #>               Goiás            Maranhão         Mato Grosso  Mato Grosso do Sul  #>                  52                  21                  51                  50  #>        Minas Gerais                Pará             Paraíba              Paraná  #>                  31                  15                  25                  41  #>          Pernambuco               Piauí      Rio de Janeiro Rio Grande do Norte  #>                  26                  22                  33                  24  #>   Rio Grande do Sul            Rondônia             Roraima      Santa Catarina  #>                  43                  11                  14                  42  #>           São Paulo             Sergipe           Tocantins  #>                  35                  28                  17   get_brazil_state_code(\"ac\") #> [1] 12 #> [1] 12 # Expected  get_brazil_state_code(\"acre\") #> [1] 12 #> [1] 12 # Expected  get_brazil_state_code(3550308) # São Paulo #> [1] 35 #> [1] 35 # Expected  get_brazil_state_code(35503081) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_state_code(3912345) # Non-existent state code #> [1] NA #> [1] NA # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state latitude — get_brazil_state_latitude","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"get_brazil_state_latitude() returns vector latitude Brazilian state capitals.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"","code":"get_brazil_state_latitude(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"x (optional) atomic vector containing names Brazilian states federal units. Municipality state codes also supported. NULL, returns vector state latitudes (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"character vector latitude Brazilian state capitals.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"data function based Google's Geocoding API gathered via tidygeocoder R package.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_latitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state latitude — get_brazil_state_latitude","text":"","code":"get_brazil_state_latitude() #>                Acre             Alagoas               Amapá            Amazonas  #>          -9.9765362          -9.6476843           0.0401529          -3.1316333  #>               Bahia               Ceará    Distrito Federal      Espírito Santo  #>         -12.9822499          -3.7304512         -15.7934036         -20.3200917  #>               Goiás            Maranhão         Mato Grosso  Mato Grosso do Sul  #>         -16.6808820          -2.5295265         -15.5986686         -20.4640173  #>        Minas Gerais                Pará             Paraíba              Paraná  #>         -19.9227318          -1.4505600          -7.1215981         -25.4295963  #>          Pernambuco               Piauí      Rio de Janeiro Rio Grande do Norte  #>          -8.0584933          -5.0874608         -22.9110137          -5.8053980  #>   Rio Grande do Sul            Rondônia             Roraima      Santa Catarina  #>         -30.0324999          -8.7494525           2.8208478         -27.5973002  #>           São Paulo             Sergipe           Tocantins  #>         -23.5506507         -10.9162061         -10.1837852   get_brazil_state_latitude(\"sp\") #> [1] -23.55065 #> [1] -23.55065 # Expected  get_brazil_state_latitude(\"sao paulo\") #> [1] -23.55065 #> [1] -23.55065 # Expected  get_brazil_state_latitude(35) # State of São Paulo #> [1] -23.55065 #> [1] -23.55065 # Expected  get_brazil_state_latitude(3550308) # Municipality of São Paulo #> [1] -23.55065 #> [1] -23.55065 # Expected  get_brazil_state_latitude(35503081) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_state_latitude(3912345) # Non-existent state code #> [1] NA #> [1] NA # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Brazilian state longitude — get_brazil_state_longitude","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"get_brazil_state_longitude() returns vector longitude Brazilian state capitals.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"","code":"get_brazil_state_longitude(x = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"x (optional) atomic vector containing names Brazilian states federal units. Municipality state codes also supported. NULL, returns vector state longitudes (default: NULL).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"character vector longitude Brazilian state capitals.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"data function based Google's Geocoding API gathered via tidygeocoder R package.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_brazil_state_longitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Brazilian state longitude — get_brazil_state_longitude","text":"","code":"get_brazil_state_longitude() #>                Acre             Alagoas               Amapá            Amazonas  #>           -67.82208           -35.73393           -51.05696           -59.98250  #>               Bahia               Ceará    Distrito Federal      Espírito Santo  #>           -38.48128           -38.52180           -47.88232           -40.33767  #>               Goiás            Maranhão         Mato Grosso  Mato Grosso do Sul  #>           -49.25327           -44.29639           -56.09913           -54.61629  #>        Minas Gerais                Pará             Paraíba              Paraná  #>           -43.94509           -48.46825           -34.88203           -49.27127  #>          Pernambuco               Piauí      Rio de Janeiro Rio Grande do Norte  #>           -34.88482           -42.80496           -43.20937           -35.20809  #>   Rio Grande do Sul            Rondônia             Roraima      Santa Catarina  #>           -51.23038           -63.87354           -60.67196           -48.54961  #>           São Paulo             Sergipe           Tocantins  #>           -46.63338           -37.07747           -48.33364   get_brazil_state_longitude(\"sp\") #> [1] -46.63338 #> [1] -46.63338 # Expected  get_brazil_state_longitude(\"sao paulo\") #> [1] -46.63338 #> [1] -46.63338 # Expected  get_brazil_state_longitude(35) # State of São Paulo #> [1] -46.63338 #> [1] -46.63338 # Expected  get_brazil_state_longitude(3550308) # Municipality of São Paulo #> [1] -46.63338 #> [1] -46.63338 # Expected  get_brazil_state_longitude(35503081) # >7 digits #> [1] NA #> [1] NA # Expected  get_brazil_state_longitude(3912345) # Non-existent state code #> [1] NA #> [1] NA # Expected"},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country names — get_country_names","title":"Get country names — get_country_names","text":"get_country_names() returns vector names codes countries present ISO 3166-1 standard.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country names — get_country_names","text":"","code":"get_country_names(format = \"common name\")"},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country names — get_country_names","text":"format (optional) character string indicating format returned. options : \"name\": name country. \"common name\": common name country. \"official name\": official name country. \"alpha 2\": two-letter country code. \"alpha 3\": three-letter country code. \"numeric\": numeric country code.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get country names — get_country_names","text":"character vector names codes countries present ISO 3166-1 standard.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get country names — get_country_names","text":"data function based data International Organization Standardization (ISO) (ISO 3166-1) via ISOcodes R package. Click learn . ISOcodes R package uses XML files provided Debian's iso-codes package data.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_country_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get country names — get_country_names","text":"","code":"get_country_names(format = \"alpha 3\") #>                                        Aruba  #>                                        \"ABW\"  #>                                  Afghanistan  #>                                        \"AFG\"  #>                                       Angola  #>                                        \"AGO\"  #>                                     Anguilla  #>                                        \"AIA\"  #>                                Åland Islands  #>                                        \"ALA\"  #>                                      Albania  #>                                        \"ALB\"  #>                                      Andorra  #>                                        \"AND\"  #>                         United Arab Emirates  #>                                        \"ARE\"  #>                                    Argentina  #>                                        \"ARG\"  #>                                      Armenia  #>                                        \"ARM\"  #>                               American Samoa  #>                                        \"ASM\"  #>                                   Antarctica  #>                                        \"ATA\"  #>                  French Southern Territories  #>                                        \"ATF\"  #>                          Antigua and Barbuda  #>                                        \"ATG\"  #>                                    Australia  #>                                        \"AUS\"  #>                                      Austria  #>                                        \"AUT\"  #>                                   Azerbaijan  #>                                        \"AZE\"  #>                                      Burundi  #>                                        \"BDI\"  #>                                      Belgium  #>                                        \"BEL\"  #>                                        Benin  #>                                        \"BEN\"  #>             Bonaire, Sint Eustatius and Saba  #>                                        \"BES\"  #>                                 Burkina Faso  #>                                        \"BFA\"  #>                                   Bangladesh  #>                                        \"BGD\"  #>                                     Bulgaria  #>                                        \"BGR\"  #>                                      Bahrain  #>                                        \"BHR\"  #>                                      Bahamas  #>                                        \"BHS\"  #>                       Bosnia and Herzegovina  #>                                        \"BIH\"  #>                             Saint Barthélemy  #>                                        \"BLM\"  #>                                      Belarus  #>                                        \"BLR\"  #>                                       Belize  #>                                        \"BLZ\"  #>                                      Bermuda  #>                                        \"BMU\"  #>              Bolivia, Plurinational State of  #>                                        \"BOL\"  #>                                       Brazil  #>                                        \"BRA\"  #>                                     Barbados  #>                                        \"BRB\"  #>                            Brunei Darussalam  #>                                        \"BRN\"  #>                                       Bhutan  #>                                        \"BTN\"  #>                                Bouvet Island  #>                                        \"BVT\"  #>                                     Botswana  #>                                        \"BWA\"  #>                     Central African Republic  #>                                        \"CAF\"  #>                                       Canada  #>                                        \"CAN\"  #>                      Cocos (Keeling) Islands  #>                                        \"CCK\"  #>                                  Switzerland  #>                                        \"CHE\"  #>                                        Chile  #>                                        \"CHL\"  #>                                        China  #>                                        \"CHN\"  #>                                Côte d'Ivoire  #>                                        \"CIV\"  #>                                     Cameroon  #>                                        \"CMR\"  #>        Congo, The Democratic Republic of the  #>                                        \"COD\"  #>                                        Congo  #>                                        \"COG\"  #>                                 Cook Islands  #>                                        \"COK\"  #>                                     Colombia  #>                                        \"COL\"  #>                                      Comoros  #>                                        \"COM\"  #>                                   Cabo Verde  #>                                        \"CPV\"  #>                                   Costa Rica  #>                                        \"CRI\"  #>                                         Cuba  #>                                        \"CUB\"  #>                                      Curaçao  #>                                        \"CUW\"  #>                             Christmas Island  #>                                        \"CXR\"  #>                               Cayman Islands  #>                                        \"CYM\"  #>                                       Cyprus  #>                                        \"CYP\"  #>                                      Czechia  #>                                        \"CZE\"  #>                                      Germany  #>                                        \"DEU\"  #>                                     Djibouti  #>                                        \"DJI\"  #>                                     Dominica  #>                                        \"DMA\"  #>                                      Denmark  #>                                        \"DNK\"  #>                           Dominican Republic  #>                                        \"DOM\"  #>                                      Algeria  #>                                        \"DZA\"  #>                                      Ecuador  #>                                        \"ECU\"  #>                                        Egypt  #>                                        \"EGY\"  #>                                      Eritrea  #>                                        \"ERI\"  #>                               Western Sahara  #>                                        \"ESH\"  #>                                        Spain  #>                                        \"ESP\"  #>                                      Estonia  #>                                        \"EST\"  #>                                     Ethiopia  #>                                        \"ETH\"  #>                                      Finland  #>                                        \"FIN\"  #>                                         Fiji  #>                                        \"FJI\"  #>                  Falkland Islands (Malvinas)  #>                                        \"FLK\"  #>                                       France  #>                                        \"FRA\"  #>                                Faroe Islands  #>                                        \"FRO\"  #>              Micronesia, Federated States of  #>                                        \"FSM\"  #>                                        Gabon  #>                                        \"GAB\"  #>                               United Kingdom  #>                                        \"GBR\"  #>                                      Georgia  #>                                        \"GEO\"  #>                                     Guernsey  #>                                        \"GGY\"  #>                                        Ghana  #>                                        \"GHA\"  #>                                    Gibraltar  #>                                        \"GIB\"  #>                                       Guinea  #>                                        \"GIN\"  #>                                   Guadeloupe  #>                                        \"GLP\"  #>                                       Gambia  #>                                        \"GMB\"  #>                                Guinea-Bissau  #>                                        \"GNB\"  #>                            Equatorial Guinea  #>                                        \"GNQ\"  #>                                       Greece  #>                                        \"GRC\"  #>                                      Grenada  #>                                        \"GRD\"  #>                                    Greenland  #>                                        \"GRL\"  #>                                    Guatemala  #>                                        \"GTM\"  #>                                French Guiana  #>                                        \"GUF\"  #>                                         Guam  #>                                        \"GUM\"  #>                                       Guyana  #>                                        \"GUY\"  #>                                    Hong Kong  #>                                        \"HKG\"  #>            Heard Island and McDonald Islands  #>                                        \"HMD\"  #>                                     Honduras  #>                                        \"HND\"  #>                                      Croatia  #>                                        \"HRV\"  #>                                        Haiti  #>                                        \"HTI\"  #>                                      Hungary  #>                                        \"HUN\"  #>                                    Indonesia  #>                                        \"IDN\"  #>                                  Isle of Man  #>                                        \"IMN\"  #>                                        India  #>                                        \"IND\"  #>               British Indian Ocean Territory  #>                                        \"IOT\"  #>                                      Ireland  #>                                        \"IRL\"  #>                    Iran, Islamic Republic of  #>                                        \"IRN\"  #>                                         Iraq  #>                                        \"IRQ\"  #>                                      Iceland  #>                                        \"ISL\"  #>                                       Israel  #>                                        \"ISR\"  #>                                        Italy  #>                                        \"ITA\"  #>                                      Jamaica  #>                                        \"JAM\"  #>                                       Jersey  #>                                        \"JEY\"  #>                                       Jordan  #>                                        \"JOR\"  #>                                        Japan  #>                                        \"JPN\"  #>                                   Kazakhstan  #>                                        \"KAZ\"  #>                                        Kenya  #>                                        \"KEN\"  #>                                   Kyrgyzstan  #>                                        \"KGZ\"  #>                                     Cambodia  #>                                        \"KHM\"  #>                                     Kiribati  #>                                        \"KIR\"  #>                        Saint Kitts and Nevis  #>                                        \"KNA\"  #>                           Korea, Republic of  #>                                        \"KOR\"  #>                                       Kuwait  #>                                        \"KWT\"  #>             Lao People's Democratic Republic  #>                                        \"LAO\"  #>                                      Lebanon  #>                                        \"LBN\"  #>                                      Liberia  #>                                        \"LBR\"  #>                                        Libya  #>                                        \"LBY\"  #>                                  Saint Lucia  #>                                        \"LCA\"  #>                                Liechtenstein  #>                                        \"LIE\"  #>                                    Sri Lanka  #>                                        \"LKA\"  #>                                      Lesotho  #>                                        \"LSO\"  #>                                    Lithuania  #>                                        \"LTU\"  #>                                   Luxembourg  #>                                        \"LUX\"  #>                                       Latvia  #>                                        \"LVA\"  #>                                        Macao  #>                                        \"MAC\"  #>                   Saint Martin (French part)  #>                                        \"MAF\"  #>                                      Morocco  #>                                        \"MAR\"  #>                                       Monaco  #>                                        \"MCO\"  #>                         Moldova, Republic of  #>                                        \"MDA\"  #>                                   Madagascar  #>                                        \"MDG\"  #>                                     Maldives  #>                                        \"MDV\"  #>                                       Mexico  #>                                        \"MEX\"  #>                             Marshall Islands  #>                                        \"MHL\"  #>                              North Macedonia  #>                                        \"MKD\"  #>                                         Mali  #>                                        \"MLI\"  #>                                        Malta  #>                                        \"MLT\"  #>                                      Myanmar  #>                                        \"MMR\"  #>                                   Montenegro  #>                                        \"MNE\"  #>                                     Mongolia  #>                                        \"MNG\"  #>                     Northern Mariana Islands  #>                                        \"MNP\"  #>                                   Mozambique  #>                                        \"MOZ\"  #>                                   Mauritania  #>                                        \"MRT\"  #>                                   Montserrat  #>                                        \"MSR\"  #>                                   Martinique  #>                                        \"MTQ\"  #>                                    Mauritius  #>                                        \"MUS\"  #>                                       Malawi  #>                                        \"MWI\"  #>                                     Malaysia  #>                                        \"MYS\"  #>                                      Mayotte  #>                                        \"MYT\"  #>                                      Namibia  #>                                        \"NAM\"  #>                                New Caledonia  #>                                        \"NCL\"  #>                                        Niger  #>                                        \"NER\"  #>                               Norfolk Island  #>                                        \"NFK\"  #>                                      Nigeria  #>                                        \"NGA\"  #>                                    Nicaragua  #>                                        \"NIC\"  #>                                         Niue  #>                                        \"NIU\"  #>                                  Netherlands  #>                                        \"NLD\"  #>                                       Norway  #>                                        \"NOR\"  #>                                        Nepal  #>                                        \"NPL\"  #>                                        Nauru  #>                                        \"NRU\"  #>                                  New Zealand  #>                                        \"NZL\"  #>                                         Oman  #>                                        \"OMN\"  #>                                     Pakistan  #>                                        \"PAK\"  #>                                       Panama  #>                                        \"PAN\"  #>                                     Pitcairn  #>                                        \"PCN\"  #>                                         Peru  #>                                        \"PER\"  #>                                  Philippines  #>                                        \"PHL\"  #>                                        Palau  #>                                        \"PLW\"  #>                             Papua New Guinea  #>                                        \"PNG\"  #>                                       Poland  #>                                        \"POL\"  #>                                  Puerto Rico  #>                                        \"PRI\"  #>       Korea, Democratic People's Republic of  #>                                        \"PRK\"  #>                                     Portugal  #>                                        \"PRT\"  #>                                     Paraguay  #>                                        \"PRY\"  #>                          Palestine, State of  #>                                        \"PSE\"  #>                             French Polynesia  #>                                        \"PYF\"  #>                                        Qatar  #>                                        \"QAT\"  #>                                      Réunion  #>                                        \"REU\"  #>                                      Romania  #>                                        \"ROU\"  #>                           Russian Federation  #>                                        \"RUS\"  #>                                       Rwanda  #>                                        \"RWA\"  #>                                 Saudi Arabia  #>                                        \"SAU\"  #>                                        Sudan  #>                                        \"SDN\"  #>                                      Senegal  #>                                        \"SEN\"  #>                                    Singapore  #>                                        \"SGP\"  #> South Georgia and the South Sandwich Islands  #>                                        \"SGS\"  #> Saint Helena, Ascension and Tristan da Cunha  #>                                        \"SHN\"  #>                       Svalbard and Jan Mayen  #>                                        \"SJM\"  #>                              Solomon Islands  #>                                        \"SLB\"  #>                                 Sierra Leone  #>                                        \"SLE\"  #>                                  El Salvador  #>                                        \"SLV\"  #>                                   San Marino  #>                                        \"SMR\"  #>                                      Somalia  #>                                        \"SOM\"  #>                    Saint Pierre and Miquelon  #>                                        \"SPM\"  #>                                       Serbia  #>                                        \"SRB\"  #>                                  South Sudan  #>                                        \"SSD\"  #>                        Sao Tome and Principe  #>                                        \"STP\"  #>                                     Suriname  #>                                        \"SUR\"  #>                                     Slovakia  #>                                        \"SVK\"  #>                                     Slovenia  #>                                        \"SVN\"  #>                                       Sweden  #>                                        \"SWE\"  #>                                     Eswatini  #>                                        \"SWZ\"  #>                    Sint Maarten (Dutch part)  #>                                        \"SXM\"  #>                                   Seychelles  #>                                        \"SYC\"  #>                         Syrian Arab Republic  #>                                        \"SYR\"  #>                     Turks and Caicos Islands  #>                                        \"TCA\"  #>                                         Chad  #>                                        \"TCD\"  #>                                         Togo  #>                                        \"TGO\"  #>                                     Thailand  #>                                        \"THA\"  #>                                   Tajikistan  #>                                        \"TJK\"  #>                                      Tokelau  #>                                        \"TKL\"  #>                                 Turkmenistan  #>                                        \"TKM\"  #>                                  Timor-Leste  #>                                        \"TLS\"  #>                                        Tonga  #>                                        \"TON\"  #>                          Trinidad and Tobago  #>                                        \"TTO\"  #>                                      Tunisia  #>                                        \"TUN\"  #>                                      Türkiye  #>                                        \"TUR\"  #>                                       Tuvalu  #>                                        \"TUV\"  #>                    Taiwan, Province of China  #>                                        \"TWN\"  #>                 Tanzania, United Republic of  #>                                        \"TZA\"  #>                                       Uganda  #>                                        \"UGA\"  #>                                      Ukraine  #>                                        \"UKR\"  #>         United States Minor Outlying Islands  #>                                        \"UMI\"  #>                                      Uruguay  #>                                        \"URY\"  #>                                United States  #>                                        \"USA\"  #>                                   Uzbekistan  #>                                        \"UZB\"  #>                Holy See (Vatican City State)  #>                                        \"VAT\"  #>             Saint Vincent and the Grenadines  #>                                        \"VCT\"  #>            Venezuela, Bolivarian Republic of  #>                                        \"VEN\"  #>                      Virgin Islands, British  #>                                        \"VGB\"  #>                         Virgin Islands, U.S.  #>                                        \"VIR\"  #>                                     Viet Nam  #>                                        \"VNM\"  #>                                      Vanuatu  #>                                        \"VUT\"  #>                            Wallis and Futuna  #>                                        \"WLF\"  #>                                        Samoa  #>                                        \"WSM\"  #>                                        Yemen  #>                                        \"YEM\"  #>                                 South Africa  #>                                        \"ZAF\"  #>                                       Zambia  #>                                        \"ZMB\"  #>                                     Zimbabwe  #>                                        \"ZWE\""},{"path":"https://danielvartan.github.io/orbis/reference/get_map_fill_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data to fill a map — get_map_fill_data","title":"Get data to fill a map — get_map_fill_data","text":"get_map_fill_data() prepares data used fill map.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_map_fill_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data to fill a map — get_map_fill_data","text":"","code":"get_map_fill_data(   data,   col_fill = NULL,   col_code,   name_col_value = \"n\",   name_col_ref = col_code,   quiet = FALSE )"},{"path":"https://danielvartan.github.io/orbis/reference/get_map_fill_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data to fill a map — get_map_fill_data","text":"data tibble data used fill. col_fill (optional) character string column name used fill. NULL, function count number occurrences value col_code (default: NULL). col_code character string column name used reference. name_col_value (optional) character string name column used value (default: \"n\"). name_col_ref (optional) character string name column used reference (default: col_code). quiet (optional) logical flag suppress messages (default: FALSE).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_map_fill_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data to fill a map — get_map_fill_data","text":"tibble.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_map_fill_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data to fill a map — get_map_fill_data","text":"","code":"library(dplyr)  data <- tibble(   state = c(\"SP\", \"RJ\", \"MG\", \"SP\", \"RJ\", \"MG\"),   value = c(1, 2, 3, 4, 5, 6) )  get_map_fill_data(data, col_fill = NULL, col_code = \"state\") #> # A tibble: 3 × 2 #>   state     n #>   <chr> <int> #> 1 MG        2 #> 2 RJ        2 #> 3 SP        2  get_map_fill_data(data, col_fill = \"value\", col_code = \"state\") #> ! There are duplicated values in state. value will be aggregated using the mean. #> # A tibble: 3 × 2 #>   state     n #>   <chr> <dbl> #> 1 SP      2.5 #> 2 RJ      3.5 #> 3 MG      4.5"},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Qual o CEP data — get_qualocep_data","title":"Get Qual o CEP data — get_qualocep_data","text":"get_qualocep_data() retrieves validated dataset Qual o CEP package's OSF repository.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Qual o CEP data — get_qualocep_data","text":"","code":"get_qualocep_data(file = NULL, pattern = \"2024-11-12.rds\", force = FALSE)"},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Qual o CEP data — get_qualocep_data","text":"file (optional) character string path Qual o CEP dataset file. NULL, dataset downloaded package's OSF repository. (default: NULL). pattern (optional) character string pattern Qual o CEP dataset file download. Click see available patterns (default: \"2024-11-12.rds\"). force (optional) logical flag force download Qual o CEP dataset file. TRUE, dataset downloaded even already exists temporary directory (default: FALSE).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Qual o CEP data — get_qualocep_data","text":"tibble containing Qual o CEP dataset following columns: postal_code: character vector postal codes. street_type: character vector type streets. street_name: character vector name streets. street: character vector full name streets. complement: character vector complement addresses. place: character vector place addresses. neighborhood: character vector neighborhoods municipality_code: integer vector codes Brazilian Institute Geography Statistics (IBGE) Brazilian municipalities. municipality: character vector name municipalities. state_code: integer vector codes Brazilian Institute Geography Statistics (IBGE) Brazilian state. state: character vector name states. federal_unit: character vector abbreviations Brazilian federal unit. latitude: numeric vector latitude values postal codes (retrieved using Google Geocoding API). longitude: numeric vector longitude values postal codes (retrieved using Google Geocoding API).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Qual o CEP data — get_qualocep_data","text":"Qual o CEP database Brazilian addresses postal codes geocoded made using Google Geocoding API. Please note year pattern. values ","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_qualocep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Qual o CEP data — get_qualocep_data","text":"","code":"if (FALSE) { # \\dontrun{   get_qualocep_data() } # }"},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"get_sidra_by_year() retrieves data Brazilian Institute Geography Statistics (IBGE) Automatic Retrieval System (SIDRA) API specified range years. function addresses SIDRA API's limitations volume data can downloaded single request. downloads data year individually combines results single tibble.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"","code":"get_sidra_by_year(years, api_start, api_end)"},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"years integerish vector years download. api_start string specifying initial part SIDRA API URL, (including) year segment. See Details section guidance. api_end string specifying final part SIDRA API URL, immediately following year segment. See Details section guidance.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"tibble containing combined data requested years, retrieved SIDRA API.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"construct API call, follow steps: Visit SIDRA website. Locate desired table containing data. Configure parameters data retrieval (e.g., variable, sex, years). Click share button (link symbol) end page. checkbox labeled \"Usar períodos relativos, quando possível.\" appears, uncheck , reload page, click share button . Copy portion \"Parâmetros para API\" URL starts \"/t\" (e.g., /t/6407...). need provide function separate parts API URL. example:   difficulty identifying correct segments, try adjusting table settings, selecting different years, examining URL changes.","code":"|-------- Start ------|--- Years ----|----- End -----| /t/6407/n6/all/v/606/p/2021,2022,2023/c2/6794/c58/1140"},{"path":"https://danielvartan.github.io/orbis/reference/get_sidra_by_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and aggregate data by year from SIDRA API — get_sidra_by_year","text":"","code":"if (FALSE) { # \\dontrun{   get_sidra_by_year(     years = 2010:2011,     api_start = \"/t/1612/n6/all/v/109/p/\",     api_end = \"/c81/2692\"   ) } # }"},{"path":"https://danielvartan.github.io/orbis/reference/get_wc_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to WorldClim data — get_wc_url","title":"Get paths to WorldClim data — get_wc_url","text":"get_wc_url() returns URL(s) WorldClim data series. get_wc_osf_id() returns Open Science Framework (OSF) ID(s) LogoClim WorldClim data series backup.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_wc_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to WorldClim data — get_wc_url","text":"","code":"get_wc_url(series, resolution = \"all\")  get_wc_osf_id(series, resolution = NULL)"},{"path":"https://danielvartan.github.io/orbis/reference/get_wc_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paths to WorldClim data — get_wc_url","text":"series character vector name WorldClim data series. following options available: \"hcd\" \"historical-climate-data\" \"historical climate data\". \"hmwd\" \"historical-monthly-weather-data\" \"historical monthly weather data\". \"fcd\" \"future-climate-data\" \"future climate data\". resolution (optional) character vector resolution WorldClim data series. following options available: \"\" (default) returns available resolutions. \"10m\" returns 10m resolution. \"5m\" returns 5m resolution. \"2.5m\" returns 2.5m resolution. \"30s\" returns 30s resolution.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/get_wc_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to WorldClim data — get_wc_url","text":"named character vector URL(s) OSF ID(s) WorldClim data series.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/get_wc_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to WorldClim data — get_wc_url","text":"","code":"get_wc_url(\"hcd\") #>                       Historical climate data  #> \"https://worldclim.org/data/worldclim21.html\"   get_wc_osf_id(\"hcd\") #> Historical climate data  #>                 \"t2jfz\"   get_wc_url(\"historical climate data\") #>                       Historical climate data  #> \"https://worldclim.org/data/worldclim21.html\"   get_wc_url(\"hmwd\") #>              Historical monthly weather data  #> \"https://worldclim.org/data/monthlywth.html\"   get_wc_osf_id(\"hmwd\") #> Historical monthly weather data  #>                         \"rd3q5\"   get_wc_url(\"historical monthly weather data\") #>              Historical monthly weather data  #> \"https://worldclim.org/data/monthlywth.html\"   get_wc_url(\"fcd\") #>                              Future climate data (10m)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim10m.html\"  #>                               Future climate data (5m)  #>   \"https://worldclim.org/data/cmip6/cmip6_clim5m.html\"  #>                             Future climate data (2.5m)  #> \"https://worldclim.org/data/cmip6/cmip6_clim2.5m.html\"  #>                              Future climate data (30s)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim30s.html\"   get_wc_osf_id(\"fcd\") #>           Future climate data (10m)   Future climate data (5m | Part 1)  #>                             \"fz7gv\"                             \"fbgjh\"  #>   Future climate data (5m | Part 2) Future climate data (2.5m | Part 1)  #>                             \"76atf\"                             \"2fq8m\"  #> Future climate data (2.5m | Part 2) Future climate data (2.5m | Part 3)  #>                             \"8cqgp\"                             \"xgcve\"  #> Future climate data (2.5m | Part 4) Future climate data (2.5m | Part 5)  #>                             \"j4rvb\"                             \"q8azg\"  #> Future climate data (2.5m | Part 6)           Future climate data (30s)  #>                             \"g98z6\"                                  NA   get_wc_url(\"future climate data\") #>                              Future climate data (10m)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim10m.html\"  #>                               Future climate data (5m)  #>   \"https://worldclim.org/data/cmip6/cmip6_clim5m.html\"  #>                             Future climate data (2.5m)  #> \"https://worldclim.org/data/cmip6/cmip6_clim2.5m.html\"  #>                              Future climate data (30s)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim30s.html\"   get_wc_url(\"future climate data\", \"10m\") #>                             Future climate data (10m)  #> \"https://worldclim.org/data/cmip6/cmip6_clim10m.html\"   get_wc_url(c(\"hcd\", \"hmwd\", \"fcd\")) #>                                Historical climate data  #>          \"https://worldclim.org/data/worldclim21.html\"  #>                        Historical monthly weather data  #>           \"https://worldclim.org/data/monthlywth.html\"  #>                              Future climate data (10m)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim10m.html\"  #>                               Future climate data (5m)  #>   \"https://worldclim.org/data/cmip6/cmip6_clim5m.html\"  #>                             Future climate data (2.5m)  #> \"https://worldclim.org/data/cmip6/cmip6_clim2.5m.html\"  #>                              Future climate data (30s)  #>  \"https://worldclim.org/data/cmip6/cmip6_clim30s.html\"   get_wc_osf_id(c(\"hcd\", \"hmwd\", \"fcd\")) #>             Historical climate data     Historical monthly weather data  #>                             \"t2jfz\"                             \"rd3q5\"  #>           Future climate data (10m)   Future climate data (5m | Part 1)  #>                             \"fz7gv\"                             \"fbgjh\"  #>   Future climate data (5m | Part 2) Future climate data (2.5m | Part 1)  #>                             \"76atf\"                             \"2fq8m\"  #> Future climate data (2.5m | Part 2) Future climate data (2.5m | Part 3)  #>                             \"8cqgp\"                             \"xgcve\"  #> Future climate data (2.5m | Part 4) Future climate data (2.5m | Part 5)  #>                             \"j4rvb\"                             \"q8azg\"  #> Future climate data (2.5m | Part 6)           Future climate data (30s)  #>                             \"g98z6\"                                  NA   get_wc_url(c(\"hcd\", \"hmwd\", \"fcd\"), \"5m\") #>                              Historical climate data  #>        \"https://worldclim.org/data/worldclim21.html\"  #>                      Historical monthly weather data  #>         \"https://worldclim.org/data/monthlywth.html\"  #>                             Future climate data (5m)  #> \"https://worldclim.org/data/cmip6/cmip6_clim5m.html\"   get_wc_osf_id(c(\"hcd\", \"hmwd\", \"fcd\"), \"5m\") #>           Historical climate data   Historical monthly weather data  #>                           \"t2jfz\"                           \"rd3q5\"  #> Future climate data (5m | Part 1) Future climate data (5m | Part 2)  #>                           \"fbgjh\"                           \"76atf\""},{"path":"https://danielvartan.github.io/orbis/reference/orbis-package.html","id":null,"dir":"Reference","previous_headings":"","what":"orbis: Spatial Data Analysis Tools — orbis-package","title":"orbis: Spatial Data Analysis Tools — orbis-package","text":"comprehensive suite tools simplifying spatial data analysis.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/orbis-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"orbis: Spatial Data Analysis Tools — orbis-package","text":"Maintainer: Daniel Vartanian danvartan@gmail.com (ORCID) [conceptor, copyright holder]","code":""},{"path":"https://danielvartan.github.io/orbis/reference/render_brazil_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Brazilian addresses — render_brazil_address","title":"Render Brazilian addresses — render_brazil_address","text":"render_brazil_address() returns vector formatted Brazilian addresses.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/render_brazil_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Brazilian addresses — render_brazil_address","text":"","code":"render_brazil_address(   street = NA_character_,   complement = NA_character_,   neighborhood = NA_character_,   municipality = NA_character_,   state = NA_character_,   postal_code = NA_character_ )"},{"path":"https://danielvartan.github.io/orbis/reference/render_brazil_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Brazilian addresses — render_brazil_address","text":"street (optional) character vector street names (default: NA_character). complement (optional) character vector complement address (default: NA_character). neighborhood (optional) character vector neighborhood names (default: NA_character). municipality (optional) character vector name municipalities (default: NA_character). state (optional) character vector name states (default: NA_character). postal_code (optional) character vector postal codes (default: NA_character).","code":""},{"path":"https://danielvartan.github.io/orbis/reference/render_brazil_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Brazilian addresses — render_brazil_address","text":"character vector formatted address.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/render_brazil_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Brazilian addresses — render_brazil_address","text":"","code":"render_brazil_address(   street = c(\"Viaduto do Chá, 15\", \"Alameda Ribeiro da Silva, 919\"),   complement = c(\"\", \"Ap. 502\"),   neighborhood = c(\"Centro\", \"Campos Elíseos\"),   municipality = c(\"São Paulo\", \"São Paulo\"),   state = c(\"SP\", \"SP\"),   postal_code = c(\"01002-020\", \"01217-010\") ) #> [1] \"Viaduto do Chá, 15, Centro, São Paulo-SP, 01002-020, Brasil\"                             #> [2] \"Alameda Ribeiro da Silva, 919, Ap. 502, Campos Elíseos, São Paulo-SP, 01217-010, Brasil\""},{"path":"https://danielvartan.github.io/orbis/reference/wc_to_ascii.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","title":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","text":"wc_to_ascii() facilitates conversion one WorldClim GeoTIFF (.tif) files ASCII raster (.asc) format. Optionally, rasters can cropped /aggregated using provided polygon class SpatVector.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/wc_to_ascii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","text":"","code":"wc_to_ascii(   file,   dir = dirname(file[1]),   shape = NULL,   aggregate = NULL,   overwrite = TRUE,   na_flag = -9999,   ... )"},{"path":"https://danielvartan.github.io/orbis/reference/wc_to_ascii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","text":"file character vector file paths WorldClim GeoTIFF files converted. files must .tif extension. dir character vector specifying output directory converted ASCII files (default: dirname(file[1])). shape (optional) SpatVector object representing polygon crop raster data. function crop raster data extent polygon (default: NULL). aggregate (optional) integer value specifying aggregation factor. function aggregate raster data factor. See aggregate() details (default: NULL). overwrite (optional) logical flag indicating whether overwrite existing files output directory (default: TRUE). na_flag (optional) integer value specifying NoData value output ASCII files (default: -9999). ... Additional arguments passed writeRaster() writing ASCII files.","code":""},{"path":"https://danielvartan.github.io/orbis/reference/wc_to_ascii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","text":"character vector containing file paths converted ASCII files.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/orbis/reference/wc_to_ascii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert WorldClim GeoTIFF files to ASCII format — wc_to_ascii","text":"","code":"if (FALSE) { # \\dontrun{   library(curl)   library(fs)   library(magrittr)   library(readr)   library(rvest)   library(stringr)   library(zip)    # Download the WorldClim data from the website    url <-     get_wc_url(\"hcd\") |>     rvest::read_html() |>     rvest::html_elements(\"a\") |>     rvest::html_attr(\"href\") |>     stringr::str_subset(\"geodata\") |>     magrittr::extract(1)    zip_file <- basename(url)    curl::curl_download(url, path(tempdir(), zip_file))    path(tempdir(), zip_file) |>     zip::unzip(exdir = tempdir())    tif_file <-     dir_ls(tempdir(), regexp = \"\\\\.tif$\") |>     magrittr::extract(1)    # Run the function    asc_file <- tif_file |> wc_to_ascii()    # Check the output    asc_file |> read_lines(n_max = 6) } # }"},{"path":"https://danielvartan.github.io/orbis/news/index.html","id":"orbis-0009000","dir":"Changelog","previous_headings":"","what":"orbis 0.0.0.9000","title":"orbis 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
